version: '3.8'

services:
  # FastAPI Backend - VLM Inference Service
  inference-api:
    build:
      context: ../apps/inference-api
      dockerfile: Dockerfile
    container_name: tru-v2-inference-api
    ports:
      - "8000:8000"
    environment:
      - MODEL_PATH=${MODEL_PATH:-Qwen/Qwen3-VL-8B-Instruct}
      - MODEL_BACKEND=${MODEL_BACKEND:-hf}
      - USE_FLASH_ATTN=${USE_FLASH_ATTN:-false}
      - CORS_ORIGINS=${CORS_ORIGINS:-["*"]}
      - FORCE_QWENVL_VIDEO_READER=${FORCE_QWENVL_VIDEO_READER:-decord}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      # Model cache persistence
      - model-cache:/root/.cache/huggingface
      # Hot-reload for development (comment out for production)
      - ../apps/inference-api/app:/app/app
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/v1/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s
    networks:
      - tru-network

  # NextJS Frontend
  web:
    build:
      context: ../apps/web
      dockerfile: Dockerfile
      args:
        # Not needed - API client uses dynamic hostname detection
        NEXT_PUBLIC_API_URL: http://localhost:8000
    container_name: tru-v2-web
    ports:
      - "3000:3000"
    environment:
      # Override at runtime for browser-side API calls
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:8000}
    depends_on:
      inference-api:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - tru-network

volumes:
  model-cache:
    driver: local

networks:
  tru-network:
    driver: bridge
